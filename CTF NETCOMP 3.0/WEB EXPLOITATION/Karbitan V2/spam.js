const io = require("socket.io-client")
const { v4: uuidv4 } = require("uuid")

// Connect to the server
const socket = io("http://localhost:3000") // Replace with your server URL if necessary

let uuid = uuidv4() // Generate a unique UUID using uuidv4
let name = "TestClient" // Set the client's name here

// Wait for connection
socket.on("connect", () => {
  console.log("Connected to the server.")

  // Register client with generated UUID and name
  socket.emit("init", { uuid, name })

  // Listen for the "flag" event (which the server may emit)
  socket.on("flag", (flag) => {
    console.log("Flag received:", flag)
  })

  // Wait for server to acknowledge and then start sending updates
  socket.on("score", (score) => {
    console.log("Initial score:", score)
  })

  // Start spamming the "update" event with a longer delay (to avoid lock detection)
  setInterval(() => {
    let scoreUpdate = Math.floor(Math.random() * 50) + 1 // Random score update between 1 and 50
    console.log(`Sending update with score: ${scoreUpdate}`)
    socket.emit("update", { score: scoreUpdate }) // Send update to server
  }, 1000) // Send update every 900ms (matches the SERVER_TICK)
})

// Handle disconnection (optional)
socket.on("disconnect", () => {
  console.log("Disconnected from server.")
})
