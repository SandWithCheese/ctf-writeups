const io = require("socket.io-client")
const { v4: uuidv4 } = require("uuid")

// Connect to the WebSocket server
const socket = io("http://localhost:3000") // Replace with actual server URL

socket.on("connect", () => {
  console.log("Connected to the server")

  // Initialize the client with UUID and name
  socket.emit("init", {
    uuid: uuidv4(), // Replace with actual UUID
    name: "Bacin", // Replace with actual name
  })

  // Score increment settings
  const increment = 50 // Amount to increment the score per update
  const updatesPerTick = 5 // Send multiple updates per tick
  const targetScore = 5000 // Score threshold for flag
  let currentScore = 0

  // Function to send updates concurrently
  async function sendConcurrentUpdates(count) {
    const updatePromises = []
    for (let i = 0; i < count; i++) {
      updatePromises.push(
        new Promise((resolve) => {
          console.log(`Sending update ${i + 1}...`)
          socket.emit("update", { id: i + 1, score: increment }, () => {
            resolve()
          })
        })
      )
    }

    // Execute all updates concurrently
    await Promise.all(updatePromises)
    currentScore += count * increment
    console.log(
      `Sent ${count} updates concurrently. Current score: ${currentScore}`
    )
  }

  // Main interval to send updates
  const interval = setInterval(async () => {
    // Send updates concurrently
    await sendConcurrentUpdates(updatesPerTick)

    if (currentScore >= targetScore) {
      clearInterval(interval) // Stop sending updates once the target score is reached
      console.log("Target score reached!")
      socket.emit("flag") // Request flag once the score threshold is crossed
    }
  }, 1000) // Adjust interval as needed to align with the server tick time

  // Listen for flag response
  socket.on("flag", (message) => {
    console.log("Flag response:", message) // This should return the flag if score >= 5000
  })

  // Optional: Listen for score updates (to monitor progress)
  socket.on("score", (score) => {
    console.log("Current score:", score)
  })
})
