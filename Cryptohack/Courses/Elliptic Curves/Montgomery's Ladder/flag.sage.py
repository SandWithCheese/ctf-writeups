

# This file was *autogenerated* from the file flag.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_255 = Integer(255); _sage_const_19 = Integer(19); _sage_const_0 = Integer(0); _sage_const_486662 = Integer(486662); _sage_const_1 = Integer(1); _sage_const_9 = Integer(9); _sage_const_0x1337c0decafe = Integer(0x1337c0decafe); _sage_const_3 = Integer(3)
F = Zmod(pow(_sage_const_2 , _sage_const_255 ) - _sage_const_19 )['x']; (x,) = F._first_ngens(1)
E = EllipticCurve(F, [_sage_const_0 , _sage_const_486662 , _sage_const_0 , _sage_const_1 , _sage_const_0 ])

G_x = _sage_const_9 
nA = _sage_const_0x1337c0decafe 

G_y_2 = (pow(G_x, _sage_const_3 ) + _sage_const_486662  * pow(G_x, _sage_const_2 ) + G_x) % (pow(_sage_const_2 , _sage_const_255 ) - _sage_const_19 )

f = x**_sage_const_2  - G_y_2
ys = [i[_sage_const_0 ] for i in f.roots()]

F = Zmod(pow(_sage_const_2 , _sage_const_255 ) - _sage_const_19 )
E = EllipticCurve(F, [_sage_const_0 , _sage_const_486662 , _sage_const_0 , _sage_const_1 , _sage_const_0 ])

for y in ys:
    G = E([G_x, y])

    S = nA * G
    print(f"Found: {S[_sage_const_0 ]}")
    break

