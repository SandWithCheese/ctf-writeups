

# This file was *autogenerated* from the file flag.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0)
from Crypto.Util.number import long_to_bytes
from libnum import n2s

with open("broken_rsa_34db5007b0788a5cd306f3bd47e9ca71.txt", "r") as f:
    n = int(f.readline().strip().split()[-_sage_const_1 ])
    e = int(f.readline().strip().split()[-_sage_const_1 ])
    c = int(f.readline().strip().split()[-_sage_const_1 ])

R = Zmod(n)['x']; (x,) = R._first_ngens(1)
f = x**_sage_const_2  - c

r8 = [i[_sage_const_0 ] for i in f.roots()]
r4 = []
print("sat")
for i in r8:
    f = x**_sage_const_2  - i
    r4 += [i[_sage_const_0 ] for i in f.roots()]

r2 = []
print("sat")
for i in r4:
    f = x**_sage_const_2  - i
    r2 += [i[_sage_const_0 ] for i in f.roots()]

r = []
print("sat")
for i in r2:
    f = x**_sage_const_2  - i
    r += [i[_sage_const_0 ] for i in f.roots()]

print("sat")
for m in r:
    try:
        print(n2s(int(m)))
    except:
        print("Fail")

