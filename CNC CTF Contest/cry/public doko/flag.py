from math import gcd
from string import ascii_uppercase
from libnum import *
from gmpy2 import iroot


def pad(msg: bytes, char: str, size: int = 1024 // 8) -> bytes:
    return msg + (char * (size - len(msg))).encode()


f1 = 0x8DF9D37DEF0551763EA29CF0FBDBD34D8435774F9E3254EE09913F089ABC74DBD281A18873FC9F1093C681B9163E7147596901CC5CCB5DCD20A41CF272C3C7C283B11E7BB90EB0B0EE106AA4D1B0531E2B51782FB8793D2D0FE29DDAAB281302E3519A4D0B5BE2FF7AB718FC54870CAA0C8C5C2C81F2CBA9AABFFEFD4BF7D90BF5ED897F156ACE4A1E8B1A2F82C71D79B50
f2 = 0x90846A7B4541A483AEDB4B8EC8B8847CF749043A6AD1D39EAFA7753280126408B219112EF9B670E1E5B5BC60E2A6DADAC4AFE8A15221B5033D5550E4A38278625A770AC3DA12DEB9422AA802B8B1334924A1D0D9F6F5F1999F16A938AB998A6B433CAC30CD8D0A0AACDA930C727C140FA5AF5FCE4F9E2810A2F4C76C4BE02D30689B222BFA0E85446735C1DC81FBA33775F
f3 = 0x6DE6901C0094AF2319A0BE542DC30666C115626D374FDDA9D8AFE32C1811B22F05DB8F8633D16D59ED69DCBC2212D44B0D38EFF638C5A2D38DB4622CC1E4B8B7648982ABD8D13470307D2622BF80A8AC8C5173781465367346B82AFE86BFDBED18E9C1A6ED230CE3598B0E17B1D00E6471D1A410E10D33348C0043EFBBDDF751F0AFFE526B4BA93B4334E852814B3C09E0B
f4 = 0x7FD9FF99516DF0D42DD8833FB43B0090CDA5DCC44B0C1C257AEF825550E4231E7C8A22C7C54EC1795A44E1FDB3267CEA957BC4BC3AE45D1B0A3E42E4C4916EE4E2B447ADA82452297AD0FE495B9CD25B26EB3B2AE4CE5C3B817023FA329E9C61F40122B549E3F7D5079B8993B8F9063AE7BF20DB50C59A1E47D1EB724D5DCF8DFE58EC567DCC225714258F5C95CEAF028EF
f5 = 0x393249F6EEC3640BB543E66FE818DEA13130D8247E3D8B6C86D4FBDB0AE0E3728F4EA54054F63647AC01F65642E5CC64F4CEF04C50BA7D475DDD523F2BC254F77DB7DB3389A319ADD88BA1CE8ECDA16B70A72891F4BF2E866A9674371E70C403E8FDA610833D5BD5FDE936E58486368972082EF17BEAB509B65F4B6EC4E3A6E372E3B65CA6B8C7ED39FD210E4794ED15B24
f6 = 0x5BFB78F642EC32556D671BE9DDEB4900BF6963A316A2E258963CA868F1CBFEBDAE073E2F1F6BF2C1F3D23CE02E92F069F67B859441BDAD1AA27D889228FC7CC06B9104FACFACAA0EA90C35CDEA9BE73324851CBE38058FDF2D61D6949E81BF29FA105E99556DD2B0B09477F0B8C69C3EF642F7F01050F8AE3DE95914DADB872987B2B838DF875442EF211CFCA75FE3A39EF
f = 0xB995953A2935EB5D07D2D3F8809232C9CE109FB5DD20E319FF4360742E569187E90E06C62939DCA8377359036BF71F4C775E004EF040F1CE631FB75EFAB852100D3E3E3B57B6BCA0AF51A372543A7D346192FFD3CBAFFEEF0ACE2CA8B0F5D73E3455A3BF7439A16C41158FBF43B6C402E0FC733BA7C7F061003CC8893572AC9CD8C391CB2E035FF7E4135866551E27D588

e = 3

# for char1 in ascii_uppercase:
#     for char2 in ascii_uppercase:
#         m1 = pad(b"", char1)
#         m2 = pad(b"}", char2)
#         if gcd(pow(s2n(m1), e) - f1, pow(s2n(m2), e) - f2) != 1:
#             print(gcd(pow(s2n(m1), e) - f1, pow(s2n(m2), e) - f2))
#             print(m1)
#             print(m2)
#             print()
#             break

n = 165128762986419735597637509189596397030590188962291783280303656051910216288681014338518572353051261007629607748340080097821911464839547171814623210958583458138875210001717464596531041232989615248722700936158206273611264313189900781300009015059042409776467283120704459460399497017689475574076643165309371741032969929703991815544304195015814271558500653

while iroot(f, e)[1] == False:
    f += n

m = int(iroot(f, e)[0])
print(n2s(m).decode())
