from sympy import isprime
from Crypto.Util.number import long_to_bytes

c = 7888201563339715729523532042336435671029501468546161810089984232235554861652583632887518799780638295517969338796557433802757791039299392111133348792678647433923838996453867899867154174775001564873158918992088753165448384991560929913405612800913117217515602253774065754803427581757277751978337814275689105334

n = 130127292446949390212867735855086334421393298489352915445932034098974310494854685420188208182244644737973417566696954612517320009326051854904532961110247688311376993922989760554696056080388241259670599567937477306283613224095383043997900439331609449744523632839529123448169800791720798913702566069153373216373

p = [
    "514",
    "515",
    "522",
    "523",
    "519",
    "514",
    "515",
    "513",
    "513",
    "513",
    "514",
    "522",
    "518",
    "518",
    "522",
    "514",
    "514",
    "516",
    "523",
    "523",
    "519",
    "514",
    "522",
    "522",
    "516",
    "519",
    "513",
    "522",
    "512",
    "512",
    "518",
    "517",
    "512",
    "513",
    "518",
    "512",
    "518",
    "513",
    "512",
    "516",
    "515",
    "513",
    "513",
    "516",
    "518",
    "514",
    "517",
    "522",
    "516",
    "519",
    "523",
    "514",
    "515",
    "523",
    "513",
    "515",
    "512",
    "514",
    "513",
    "519",
    "517",
    "518",
    "513",
    "517",
    "513",
    "523",
    "514",
    "518",
    "522",
    "519",
    "518",
    "522",
    "518",
    "522",
    "518",
    "513",
    "522",
    "516",
    "514",
    "513",
    "516",
    "514",
    "516",
    "514",
    "513",
    "519",
    "514",
    "514",
    "514",
    "523",
    "519",
    "523",
    "512",
    "515",
    "518",
    "522",
    "515",
    "516",
    "523",
    "522",
    "512",
    "512",
    "522",
    "518",
    "517",
    "516",
    "515",
    "514",
    "515",
    "514",
    "523",
    "514",
    "512",
    "518",
    "519",
    "522",
    "516",
    "516",
    "522",
    "516",
    "514",
    "517",
    "514",
    "517",
    "523",
    "523",
    "513",
    "518",
    "512",
    "515",
    "518",
    "518",
    "514",
    "519",
    "512",
    "522",
    "517",
    "518",
    "516",
    "518",
    "515",
    "517",
    "523",
    "519",
    "515",
    "519",
    "519",
    "519",
    "518",
    "519",
    "512",
    "516",
    "514",
    "522",
    "516",
]

q = [
    "514",
    "514",
    "523",
    "519",
    "517",
    "523",
    "516",
    "518",
    "518",
    "523",
    "518",
    "522",
    "518",
    "516",
    "512",
    "518",
    "514",
    "517",
    "515",
    "518",
    "516",
    "516",
    "523",
    "513",
    "515",
    "517",
    "512",
    "517",
    "517",
    "523",
    "514",
    "523",
    "517",
    "523",
    "517",
    "517",
    "513",
    "519",
    "519",
    "515",
    "512",
    "519",
    "517",
    "515",
    "522",
    "512",
    "519",
    "517",
    "516",
    "516",
    "517",
    "516",
    "513",
    "517",
    "517",
    "514",
    "516",
    "522",
    "522",
    "516",
    "517",
    "512",
    "515",
    "512",
    "523",
    "518",
    "516",
    "514",
    "517",
    "513",
    "523",
    "517",
    "518",
    "522",
    "517",
    "523",
    "518",
    "522",
    "512",
    "518",
    "522",
    "522",
    "523",
    "514",
    "518",
    "523",
    "518",
    "517",
    "515",
    "516",
    "512",
    "512",
    "516",
    "518",
    "516",
    "513",
    "522",
    "523",
    "518",
    "512",
    "515",
    "522",
    "512",
    "516",
    "518",
    "516",
    "515",
    "517",
    "522",
    "516",
    "522",
    "514",
    "514",
    "514",
    "523",
    "518",
    "512",
    "518",
    "515",
    "515",
    "522",
    "523",
    "522",
    "522",
    "522",
    "518",
    "516",
    "523",
    "523",
    "523",
    "513",
    "514",
    "517",
    "512",
    "513",
    "514",
    "519",
    "518",
    "516",
    "519",
    "518",
    "523",
    "518",
    "514",
    "518",
    "514",
    "514",
    "519",
    "522",
    "513",
    "522",
    "513",
    "523",
    "515",
    "522",
]

# range 100 - 999

for i in range(100, 999):
    real_p = ""
    real_q = ""
    for j in range(len(p)):
        tmp_p = int(p[j]) ^ i
        tmp_q = int(q[j]) ^ i
        if 0 <= tmp_p <= 9 and 0 <= tmp_q <= 9:
            real_p += str(tmp_p)
            real_q += str(tmp_q)
        else:
            break

    if (
        len(real_p) == len(p)
        and len(real_q) == len(q)
        and isprime(int(real_p))
        and isprime(int(real_q))
    ):
        break

e = 0x10001

real_p = int(real_p)
real_q = int(real_q)

phi = (real_p - 1) * (real_q - 1)
d = pow(e, -1, phi)
pl = pow(c, d, n)
print(long_to_bytes(pl).decode())
