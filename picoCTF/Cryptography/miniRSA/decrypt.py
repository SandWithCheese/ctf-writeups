from sympy import integer_nthroot
from Crypto.Util.number import long_to_bytes

n = 29331922499794985782735976045591164936683059380558950386560160105740343201513369939006307531165922708949619162698623675349030430859547825708994708321803705309459438099340427770580064400911431856656901982789948285309956111848686906152664473350940486507451771223435835260168971210087470894448460745593956840586530527915802541450092946574694809584880896601317519794442862977471129319781313161842056501715040555964011899589002863730868679527184420789010551475067862907739054966183120621407246398518098981106431219207697870293412176440482900183550467375190239898455201170831410460483829448603477361305838743852756938687673
e = 3
c = 2205316413931134031074603746928247799030155221252519872650080519263755075355825243327515211479747536697517688468095325517209911688684309894900992899707504087647575997847717180766377832435022794675332132906451858990782325436498952049751141


# 7 mod 3 = 1
# 3*i + 1 = 7
# c = m^3 mod n
# m^3 = n*i + c

i = 0
while True:
    root, isCube = integer_nthroot(n * i + c, e)
    if isCube:
        print(long_to_bytes(root))
        break
    i += 1
