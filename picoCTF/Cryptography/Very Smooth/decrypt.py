# n = 10033310903145814319027103147761657642751993600390444720089992753390734164439825082217242985936466300818448270678090805818715241583067372462905956290668616885579196620811814869700968673374725318378409842261139374739598382662529324626323439051514661632424684311578573292322749519036637767044739467843929071592776462978979360059369460557734305392116027365356798638469048789833678454348651798790643543817231765467611482602969186800846552294866112296508548100801134193027261256788091125173782373607693603927832108567879575947428341219498900927360467005917638716791059020049846865883103120696844861111897533879256896235869
# c = 1799708908965729048818587919342125920713422219708943595434250298493384884613728231493684913698115390962213500156142509698723614680535007633247652198807219675774389415121603419627049902505297398379131805477341147540226929431596971113121080101927538242938302041117736695498842911457109664726915632359871989344743269061613978542632641338637517043590177745042214920759072325950733693910360696684522777333408678306087618298996192933035641534047832545722601996522326955789452337177403323454700413522968138698203909291696289665134997201347212659426550454661103030616580173472531712142417790607614025006725501025384657553079
e = 65537

n = "4f7aa864f662a42a92220e372f5ff25a142aef26106a0dbdf573a66594966ac5dd03848745bb6a80402cad7ac6f2bf93f9ed840edd9c157dfd5d265ce2403e155a29666df8f9b98167ad2452e5a63fd0b7b14ffe966db60c6e2c65b0f602f5c22eb030c0335187759909abd4df622118c23463bcc42650e0a7761257452bf40069ca50dbe0c922d8823a9dcc4231b3952d31d1e977cb520528c6a450405f2a2ee6134db8c61ceb4478a647b0469712cc4f3d1369ef3dfd3d876a2c77bac5a149ccf3723a6e8c3ba1deb0675f25def8da9de2b3ac8b3e38d5ac5c9736b9af087b3fc53450136428e07d58fbc00f6609a4cc14eb0a13a7e76056a241256e03e95d"
c = "e41a61908eb48b85dc78975c288e62a271b1f237fdc958162727d2930b9af850e908137655c5955a078ff1aa63f5509fbaf79d179d24d209a061c36e0709437b8d2641f41d354bdea062084ea3be8637ed1c4bd8cf63d16c942976dd9d6188fc5e419afae17493d7cdb93d84052637d15e7fa1f852f4f5d786c86bfd024df0dfcf8431e7230cfbbce76a1835b178020ef839af42c377706918a50aac56f79285d743f4a177425eb00eaeb2bebe99343911ab653fe64bb61e140153b113f8554fe29561756fafc7460683d59dd3ee50eb48b718443b9f49e663b6dd02b0a15297468ec30a4f487e328103cdbc59d1d66fc4f03ef75ae45d6ce2035fdfaeb86b7"

n = int(n, 16)
c = int(c, 16)

from primefac import pollard_pm1
from Crypto.Util.number import long_to_bytes

p = pollard_pm1(n)
print(p)

q = n // p
print(q)

print(n)
print(p * q)

phi = (p - 1) * (q - 1)

d = pow(e, -1, phi)
flag = pow(c, d, n)

print(long_to_bytes(flag))
